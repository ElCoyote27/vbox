diff --git a/ironic/drivers/modules/ssh.py b/ironic/drivers/modules/ssh.py
index 13c46b5..00ade4b 100644
--- a/ironic/drivers/modules/ssh.py
+++ b/ironic/drivers/modules/ssh.py
@@ -149,9 +149,9 @@ def _get_command_sets(virt_type):
     if virt_type == 'vbox':
         return {
             'base_cmd': 'LC_ALL=C /usr/bin/VBoxManage',
-            'start_cmd': 'startvm {_NodeName_}',
-            'stop_cmd': 'controlvm {_NodeName_} poweroff',
-            'reboot_cmd': 'controlvm {_NodeName_} reset',
+            'start_cmd': 'startvm {_NodeName_} --type headless',
+            'stop_cmd': 'controlvm {_NodeName_} poweroff --type headless',
+            'reboot_cmd': 'controlvm {_NodeName_} reset --type headless',
             'list_all': "list vms|awk -F'\"' '{print $2}'",
             'list_running': 'list runningvms',
             'get_node_macs': (
@@ -738,6 +738,16 @@ class SSHManagement(base.ManagementInterface):
         driver_info['macs'] = driver_utils.get_node_mac_addresses(task)
         ssh_obj = _get_connection(node)
 
+        node_name = _get_hosts_name_for_node(ssh_obj, driver_info)
+        virt_type = driver_info['virt_type']
+
+        if virt_type == 'vbox':
+            current_pstate = _get_power_status(ssh_obj, driver_info)
+            LOG.debug("VBox Power State for VM %s: '%s', ", node_name, current_pstate)
+            if current_pstate == states.POWER_ON:
+                LOG.debug("VBox Power State: Forcing VM %s to off (Reason: Power was '%s' ), ", node_name, current_pstate)
+                _power_off(ssh_obj, driver_info)
+
         boot_device_map = _get_boot_device_map(driver_info['virt_type'])
         try:
             _set_boot_device(ssh_obj, driver_info, boot_device_map[device])
